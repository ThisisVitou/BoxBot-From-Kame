[1/10] Performing build step for 'bootloader'
[1/1] C:\WINDOWS\system32\cmd.exe /C "cd /D D:\Code\boxbot\boxbot_backleg\build\bootloader\esp-idf\esptool_py && C:\Espressif\python_env\idf5.4_py3.11_env\Scripts\python.exe D:/Code/fuckesp/v5.4/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 D:/Code/boxbot/boxbot_backleg/build/bootloader/bootloader.bin"
Bootloader binary size 0x6560 bytes. 0xaa0 bytes (9%) free.
[2/10] No install step for 'bootloader'
[3/10] Completed 'bootloader'
[4/10] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/boxbot_backleg.c.obj
[5/10] Linking C static library esp-idf\main\libmain.a
[6/10] Generating ld/sections.ld
[7/10] Linking CXX executable boxbot_backleg.elf
[8/10] Generating binary image from built executable
esptool.py v4.8.1
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated D:/Code/boxbot/boxbot_backleg/build/boxbot_backleg.bin
[9/10] C:\WINDOWS\system32\cmd.exe /C "cd /D D:\Code\boxbot\boxbot_backleg\build\esp-idf\esptool_py && C:\Espressif\python_env\idf5.4_py3.11_env\Scripts\python.exe D:/Code/fuckesp/v5.4/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app D:/Code/boxbot/boxbot_backleg/build/partition_table/partition-table.bin D:/Code/boxbot/boxbot_backleg/build/boxbot_backleg.bin"
boxbot_backleg.bin binary size 0x2f330 bytes. Smallest app partition is 0x100000 bytes. 0xd0cd0 bytes (82%) free.
[9/10] C:\WINDOWS\system32\cmd.exe /C "cd /D D:\Code\fuckesp\v5.4\esp-idf\components\esptool_py && C:\Espressif\tools\cmake\3.30.2\bin\cmake.exe -D IDF_PATH=D:/Code/fuckesp/v5.4/esp-idf -D SERIAL_TOOL=C:/Espressif/python_env/idf5.4_py3.11_env/Scripts/python.exe;;D:/Code/fuckesp/v5.4/esp-idf/components/esptool_py/esptool/esptool.py;--chip;esp32 -D SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args -D WORKING_DIRECTORY=D:/Code/boxbot/boxbot_backleg/build -P D:/Code/fuckesp/v5.4/esp-idf/components/esptool_py/run_serial_tool.cmake"
esptool.py --chip esp32 -p COM4 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 40m --flash_size 4MB 0x1000 bootloader/bootloader.bin 0x10000 boxbot_backleg.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.8.1
Serial port COM4
Connecting....
Chip is ESP32-D0WDQ6-V3 (revision v3.1)
Features: WiFi, BT, Dual Core, 240MHz, VRef calibration in efuse, Coding Scheme None
Crystal is 40MHz
MAC: 2c:bc:bb:92:7a:58
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 460800
Changed.
Configuring flash size...
Flash will be erased from 0x00001000 to 0x00007fff...
Flash will be erased from 0x00010000 to 0x0003ffff...
Flash will be erased from 0x00008000 to 0x00008fff...
SHA digest in image updated
Compressed 25952 bytes to 16363...
Writing at 0x00001000... (100 %)
Wrote 25952 bytes (16363 compressed) at 0x00001000 in 0.8 seconds (effective 273.6 kbit/s)...
Hash of data verified.
Compressed 193328 bytes to 104543...
Writing at 0x00010000... (14 %)
Writing at 0x0001cbd1... (28 %)
Writing at 0x00022854... (42 %)
Writing at 0x00028353... (57 %)
Writing at 0x0002f743... (71 %)
Writing at 0x00036a94... (85 %)
Writing at 0x0003ce3b... (100 %)
Wrote 193328 bytes (104543 compressed) at 0x00010000 in 2.6 seconds (effective 593.7 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 103...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (103 compressed) at 0x00008000 in 0.1 seconds (effective 382.2 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
